DEFCONFIG=cloudripper_gki_defconfig
GKI_FRAGMENT_DEFCONFIG=${KERNEL_DIR}/arch/arm64/configs/cloudripper_gki.fragment

. ${ROOT_DIR}/${KERNEL_DIR}/build.config.gs101

# Set BUILD_VENDOR_KERNEL_BOOT to 1 to build vendor_kernel_boot and remove vendor_boot
# artifacts and arguments since we don't need to update vendor_boot anymore.
BUILD_VENDOR_BOOT_IMG=""
BUILD_VENDOR_KERNEL_BOOT=1
KERNEL_VENDOR_CMDLINE=""
VENDOR_BOOTCONFIG=""
INITRAMFS_VENDOR_RAMDISK_FRAGMENT_NAME=""
VENDOR_RAMDISK_BINARY=""
GKI_RAMDISK_PREBUILT_BINARY=""

MAKE_GOALS="$MAKE_GOALS
modules
google/gs201-a0.dtb
google/gs201-b0.dtb
google/dtbo.img
google/gs201-dpm-eng.dtbo
google/gs201-dpm-user.dtbo
google/gs201-dpm-userdebug.dtbo
"

FILES="
arch/arm64/boot/dts/google/gs201-a0.dtb
arch/arm64/boot/dts/google/gs201-b0.dtb
arch/arm64/boot/dts/google/dtbo.img
arch/arm64/boot/dts/google/gs201-dpm-eng.dtbo
arch/arm64/boot/dts/google/gs201-dpm-user.dtbo
arch/arm64/boot/dts/google/gs201-dpm-userdebug.dtbo
"

if [ -z "$MIXED_BUILD" ]; then
FILES="$FILES
$DEVICE_KERNEL_FILES
"
fi

# Concatenate vendor_kernel_boot_modules.gs201 (platform common) and vendor_kernel_boot_modules.cloudripper (device specified) into one file
POST_KERNEL_BUILD_CMDS="concat_vendor_boot_modules"
function concat_vendor_boot_modules() {
  cat ${KERNEL_DIR}/vendor_kernel_boot_modules.gs201 \
    ${KERNEL_DIR}/vendor_kernel_boot_modules.cloudripper > \
    ${OUT_DIR}/vendor_kernel_boot_modules.concat
  MODULES_LIST=${OUT_DIR}/vendor_kernel_boot_modules.concat
}

VENDOR_DLKM_MODULES_BLOCKLIST=${KERNEL_DIR}/vendor_dlkm.blocklist.cloudripper

EXT_MODULES_MAKEFILE=${KERNEL_DIR}/Makefile.ext_modules.cloudripper
# Explicitly clear EXT_MODULES because build.config.gs101 might set it to
# "private/google-modules/uwb/kernel" which we don't want because uwb/kernel is
# already built by Makefile.ext_modules.cloudripper
EXT_MODULES=""
